name: Go
on:
  push:
    tags:
      - 'v*.*.*'
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
      run: echo ::set-env name=RELEASE_VERSION::${GITHUB_REF:10}

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build linux
      env:
        GOARCH: amd64
        GOOS: linux
      run: go build -v -trimpath -o c3-${{ env.RELEASE_VERSION }}-linux-amd64 ./cmd/c3

    - name: Build MacOS
      env:
        GOARCH: amd64
        GOOS: darwin
      run: go build -v -trimpath -o c3-${{ env.RELEASE_VERSION }}-darwin-amd64 ./cmd/c3

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.RELEASE_VERSION }}
        release_name: Release ${{ env.RELEASE_VERSION }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./c3-${{ env.RELEASE_VERSION }}-linux-amd64
        asset_name: c3-${{ env.RELEASE_VERSION }}-linux-amd64
        asset_content_type: application/octet-stream
